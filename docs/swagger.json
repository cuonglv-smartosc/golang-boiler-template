{
    "swagger": "2.0",
    "info": {
        "title": "Loyalty Backend",
        "contact": {
            "name": "Dzung VM",
            "email": "dungvm@smartosc.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "basePath": "/api/v1",
    "paths": {
        "/": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LoyaltyLogicBusiness"
                ],
                "summary": "get list redeem rules are activation",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vendor ID",
                        "name": "vendor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/address_book": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AddressBook"
                ],
                "summary": "GetAddressBookByUserId",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Input search",
                        "name": "input_search",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AddressBook"
                ],
                "summary": "InsertAddressBook",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AddAddressBookDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/address_book/:addressBookId": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AddressBook"
                ],
                "summary": "GetAddressBookByUserId",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            },
            "delete": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "AddressBook"
                ],
                "summary": "RemoveFromAddressBook",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/login/apple": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login Apple",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginAppleDtos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/login/email": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login email",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginCheckEmailReqDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/login/email/otp": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Check OTP code for new device",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginEmailWithOtpReqDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/login/google": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Login Google",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.LoginGoogleDtos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/refresh-token": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Login"
                ],
                "summary": "Get New Access Token By Refresh Token",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RefreshTokenParams"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/register": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "register wallet",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RegisterWalletDtos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/register/check-email": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Check email before register user",
                "parameters": [
                    {
                        "type": "string",
                        "name": "device_code",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "name": "email",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/auth/register/check-otp": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Register"
                ],
                "summary": "Check otp before register user",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CheckEmailAndOtpDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/calculate-redeem": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LoyaltyLogicBusiness"
                ],
                "summary": "Calculate information with voucher and vendor redeem rule",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RedeemCalculateInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.RedeemCalculateResponse"
                        }
                    },
                    "400": {
                        "description": "Has error with the payload",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    },
                    "500": {
                        "description": "System has error occur",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    }
                }
            }
        },
        "/dapps": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home page"
                ],
                "summary": "get list dapp",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/devices/device_codes/{deviceCode}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Device"
                ],
                "summary": "Get detail device by device code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Device code",
                        "name": "deviceCode",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/events": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home page"
                ],
                "summary": "get list events",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event type",
                        "name": "event_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Event name",
                        "name": "event_name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "All Events",
                        "name": "all_events",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Vendor Config Id",
                        "name": "vendor_config_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/events/answer-sub-event": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Options"
                ],
                "summary": "AnswerToSubEvent",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.AnswerToEventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/events/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home page"
                ],
                "summary": "get event details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/events/join-sub-event": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Options"
                ],
                "summary": "JoinToSubEvent",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.JoinToEventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/events/options": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Options"
                ],
                "summary": "UpdateEventOptions",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateEventOptionsDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/events/options/{event_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Options"
                ],
                "summary": "get event options",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Event ID",
                        "name": "event_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/events/un-join-sub-event": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Event Options"
                ],
                "summary": "UnJoinToSubEvent",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.JoinToEventDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/insert-redemption-history": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LoyaltyLogicBusiness"
                ],
                "summary": "InsertRedemptionHistory information with voucher and vendor redeem rule",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RedeemCalculateInformation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/dtos.RedeemCalculateInformation"
                        }
                    },
                    "400": {
                        "description": "Has error with the payload",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    },
                    "500": {
                        "description": "System has error occur",
                        "schema": {
                            "$ref": "#/definitions/httperr.Error"
                        }
                    }
                }
            }
        },
        "/integrations": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integration"
                ],
                "summary": "get list integration",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Category",
                        "name": "category",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Vendor Config Id",
                        "name": "vendor_config_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/loyalty-balance": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LoyaltyLogicBusiness"
                ],
                "summary": "get loyalty point balance",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Vendor's Token address",
                        "name": "vendor_token",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/networks": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home page"
                ],
                "summary": "get list network",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "GetNotifications",
                "parameters": [
                    {
                        "type": "boolean",
                        "description": "Only un read",
                        "name": "only_un_read",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/notifications/read": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "ReadNotifications",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/notifications/read_all": {
            "patch": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Notification"
                ],
                "summary": "ReadAllNotifications",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/order_payment/order_signature/{order_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OrderPayment"
                ],
                "summary": "Get Signature Order by Order ID ECom",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order ECom ID",
                        "name": "OrderId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/send_muck": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "SendOtp",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/shop/scan_user": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shop"
                ],
                "summary": "ScanUser",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ScanUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/supported_token": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home page"
                ],
                "summary": "get list sp token",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Network id",
                        "name": "network_id",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "List contract address",
                        "name": "list_address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/token": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Token"
                ],
                "summary": "FindTokenByNetworkId",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Network id",
                        "name": "network_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/transaction_fees": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction Fee"
                ],
                "summary": "GetListTransactionFee",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "action_id",
                        "name": "action_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/transactions": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "CreateSignTransaction",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateSignTransactionDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/transactions/history/system_operation": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "GetHistorySystemOperations",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Transaction Type",
                        "name": "txn_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/transactions/history/transaction": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "GetHistoryTransactions",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Txn Type",
                        "name": "txn_type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start Date",
                        "name": "start_date",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End Date",
                        "name": "end_date",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "page_size",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page_number",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/transactions/reject": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "RejectTransaction",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.RejectTransactionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/transactions/update_status": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transaction"
                ],
                "summary": "UpdateStatusTransaction",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateStatusTransactionDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/transactions/{id}": {
            "get": {
                "description": "Retrieves a PGOrder by its unique ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "PGOrder"
                ],
                "summary": "Get PGOrder by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "PGOrder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/user-crm": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Create a new UserCRM record",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserCRM"
                ],
                "summary": "Create a new UserCRM",
                "parameters": [
                    {
                        "description": "UserCRM creation data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreateUserCRMDto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/user-crm/{user_id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Get details of a UserCRM by user ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserCRM"
                ],
                "summary": "Get UserCRM details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Update details of a UserCRM",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "UserCRM"
                ],
                "summary": "Update UserCRM details",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "UserCRM update data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateUserCRMDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/user_nft": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Home page"
                ],
                "summary": "get list nft",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Vendor Config Id",
                        "name": "vendor_config_id",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "PlatForm",
                        "name": "platform_id",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/configs/token_fee": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Configs"
                ],
                "summary": "ConfigTokenFee",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.ConfigTokenFeeDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/me": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get detail information from user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/me/logout": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Logout",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/me/passcode": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create passcode",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.CreatePasscodeDtos"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify to update passcode",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.VerifyPasscodeDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/me/passcode/check": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Request to update passcode",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdatePasscodeReqDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/me/verify/passcode": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Verify passcode",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.PasscodeDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "FindEmailAndAddress",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Email",
                        "name": "email",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Address",
                        "name": "address",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/update": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "UpdateUser",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/users/vendor_config": {
            "patch": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "UpdateDefaultVendorConfig",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.UpdateDefaultVendorConfigDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/validate_muck": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "OTP"
                ],
                "summary": "ValidateOtp",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.MuckTnxReq"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/vendor_config": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "get list vendors",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/vendor_config/detail": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Vendor"
                ],
                "summary": "get vendor detail",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Network id",
                        "name": "network_id",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Vendor id",
                        "name": "vendor_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/vendor_sale": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VendorSale"
                ],
                "summary": "GetOnSales",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.GetOnSalesDto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/vendor_sale/{id}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "VendorSale"
                ],
                "summary": "GetOnSaleById",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sale ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/verify_paymaster": {
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Verify paymaster"
                ],
                "summary": "VerifyPaymaster",
                "parameters": [
                    {
                        "description": "Body data",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/dtos.VerifyPaymasterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        },
        "/vouchers": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "LoyaltyLogicBusiness"
                ],
                "summary": "get list voucher available",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Order id (E-Com)",
                        "name": "order_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.SuccessDto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorDto"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "dtos.AddAddressBookDto": {
            "type": "object",
            "required": [
                "address",
                "username"
            ],
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "dtos.Answer": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "option_id": {
                    "type": "integer"
                },
                "question_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.AnswerToEventDto": {
            "type": "object",
            "properties": {
                "answers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.Answer"
                    }
                },
                "option_id": {
                    "type": "integer"
                },
                "sub_event_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.CheckEmailAndOtpDto": {
            "type": "object",
            "required": [
                "email",
                "otp_code"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "otp_code": {
                    "type": "string"
                }
            }
        },
        "dtos.ConfigTokenFeeDto": {
            "type": "object",
            "required": [
                "network_id",
                "token_fee_address"
            ],
            "properties": {
                "network_id": {
                    "type": "integer"
                },
                "token_fee_address": {
                    "type": "string"
                }
            }
        },
        "dtos.CreateOrderRequestDto": {
            "type": "object",
            "required": [
                "network_id",
                "vendor_sale_id"
            ],
            "properties": {
                "create_sign_transaction": {
                    "$ref": "#/definitions/dtos.CreateSignTransactionDto"
                },
                "network_id": {
                    "type": "integer"
                },
                "quantity": {
                    "type": "number"
                },
                "vendor_id": {
                    "type": "integer"
                },
                "vendor_sale_id": {
                    "type": "string"
                }
            }
        },
        "dtos.CreatePGOrderRequestDto": {
            "type": "object",
            "required": [
                "network_id",
                "payment_gateway_id",
                "vendor_sale_id"
            ],
            "properties": {
                "network_id": {
                    "type": "integer"
                },
                "payment_gateway_id": {
                    "description": "ID of the payment gateway to use",
                    "type": "integer"
                },
                "quantity": {
                    "type": "number"
                },
                "vendor_id": {
                    "type": "integer"
                },
                "vendor_sale_id": {
                    "type": "string"
                }
            }
        },
        "dtos.CreatePasscodeDtos": {
            "type": "object",
            "required": [
                "auth_code",
                "auth_type",
                "device_code",
                "device_name",
                "device_token",
                "device_type",
                "encrypted_private_key",
                "owner",
                "pass_code",
                "vendor_id"
            ],
            "properties": {
                "auth_code": {
                    "type": "string"
                },
                "auth_type": {
                    "$ref": "#/definitions/models.AccountType"
                },
                "device_code": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "encrypted_private_key": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "pass_code": {
                    "type": "string"
                },
                "vendor_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.CreateSignTransactionDto": {
            "type": "object",
            "properties": {
                "action_id": {
                    "type": "integer",
                    "minimum": 0
                },
                "balance": {
                    "type": "number"
                },
                "coupon_code": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "expired_at": {
                    "type": "string"
                },
                "group_member": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "order_ecom": {
                    "type": "string"
                },
                "payment_method": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "user_ops": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dtos.UserOpExtraTransaction"
                    }
                }
            }
        },
        "dtos.CreateUserCRMDto": {
            "type": "object",
            "required": [
                "birthday",
                "clv",
                "register_date",
                "tier",
                "user_id",
                "vendor_id"
            ],
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attribute"
                    }
                },
                "birthday": {
                    "type": "string"
                },
                "clv": {
                    "type": "number"
                },
                "register_date": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "vendor_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.GetOnSalesDto": {
            "type": "object",
            "required": [
                "vendor_id"
            ],
            "properties": {
                "object_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjectType"
                    }
                },
                "page_number": {
                    "type": "integer"
                },
                "page_size": {
                    "type": "integer"
                },
                "search_by": {
                    "type": "string"
                },
                "vendor_collection_id": {
                    "type": "string"
                },
                "vendor_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.JoinToEventDto": {
            "type": "object",
            "properties": {
                "sub_event_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.LoginAppleDtos": {
            "type": "object",
            "required": [
                "code",
                "device_code",
                "device_name",
                "device_token",
                "device_type"
            ],
            "properties": {
                "code": {
                    "type": "string"
                },
                "device_code": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                }
            }
        },
        "dtos.LoginCheckEmailReqDto": {
            "type": "object",
            "required": [
                "device_code",
                "device_name",
                "device_token",
                "device_type",
                "email",
                "pass_code"
            ],
            "properties": {
                "device_code": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "pass_code": {
                    "type": "string"
                }
            }
        },
        "dtos.LoginEmailWithOtpReqDto": {
            "type": "object",
            "required": [
                "device_code",
                "device_name",
                "device_token",
                "device_type",
                "email",
                "pass_code"
            ],
            "properties": {
                "device_code": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "otp_code": {
                    "type": "string"
                },
                "pass_code": {
                    "type": "string"
                }
            }
        },
        "dtos.LoginGoogleDtos": {
            "type": "object",
            "required": [
                "credential",
                "device_code",
                "device_name",
                "device_token",
                "device_type"
            ],
            "properties": {
                "credential": {
                    "type": "string"
                },
                "device_code": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                }
            }
        },
        "dtos.MuckTnxReq": {
            "type": "object",
            "required": [
                "otp_code"
            ],
            "properties": {
                "otp_code": {
                    "type": "string"
                }
            }
        },
        "dtos.PasscodeDto": {
            "type": "object",
            "required": [
                "pass_code"
            ],
            "properties": {
                "pass_code": {
                    "type": "string"
                }
            }
        },
        "dtos.RedeemCalculateInformation": {
            "type": "object",
            "required": [
                "order_id"
            ],
            "properties": {
                "applied_points": {
                    "type": "number"
                },
                "number_point": {
                    "type": "number"
                },
                "order_id": {
                    "type": "string"
                },
                "vouchers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "dtos.RedeemCalculateResponse": {
            "type": "object",
            "properties": {
                "currency": {
                    "type": "string"
                },
                "discount_on_item": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "array",
                        "items": {
                            "$ref": "#/definitions/utils.Reward"
                        }
                    }
                },
                "discount_on_total_order": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.Reward"
                    }
                },
                "total_discount": {
                    "type": "number"
                },
                "total_point_discount": {
                    "type": "number"
                },
                "total_remaining_amount": {
                    "type": "number"
                }
            }
        },
        "dtos.RefreshTokenParams": {
            "type": "object",
            "required": [
                "refresh_token"
            ],
            "properties": {
                "refresh_token": {
                    "type": "string"
                }
            }
        },
        "dtos.RegisterWalletDtos": {
            "type": "object",
            "required": [
                "device_code",
                "device_name",
                "device_token",
                "device_type",
                "email",
                "encrypted_private_key",
                "otp_code",
                "owner",
                "pass_code",
                "vendor_id"
            ],
            "properties": {
                "device_code": {
                    "type": "string"
                },
                "device_name": {
                    "type": "string"
                },
                "device_token": {
                    "type": "string"
                },
                "device_type": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "encrypted_private_key": {
                    "type": "string"
                },
                "otp_code": {
                    "type": "string"
                },
                "owner": {
                    "type": "string"
                },
                "pass_code": {
                    "type": "string",
                    "minLength": 8
                },
                "vendor_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.RejectTransactionRequest": {
            "type": "object",
            "required": [
                "txn_id"
            ],
            "properties": {
                "txn_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.ScanUserRequest": {
            "type": "object",
            "required": [
                "collection_address",
                "coupon",
                "currency",
                "nft_id",
                "order_paid",
                "user_address"
            ],
            "properties": {
                "collection_address": {
                    "type": "string"
                },
                "coupon": {
                    "type": "object",
                    "required": [
                        "discount",
                        "vendor_config_id"
                    ],
                    "properties": {
                        "description": {
                            "type": "string"
                        },
                        "discount": {
                            "type": "string"
                        },
                        "name": {
                            "type": "string"
                        },
                        "vendor_config_id": {
                            "type": "string"
                        }
                    }
                },
                "currency": {
                    "type": "string"
                },
                "nft_id": {
                    "type": "string"
                },
                "note": {
                    "type": "string"
                },
                "order_paid": {
                    "type": "string"
                },
                "user_address": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateDefaultVendorConfigDto": {
            "type": "object",
            "properties": {
                "vendor_config_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.UpdateEventOptionsDto": {
            "type": "object",
            "properties": {
                "event_id": {
                    "type": "integer"
                },
                "event_option_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.UpdatePasscodeReqDto": {
            "type": "object",
            "required": [
                "new_pass_code",
                "old_pass_code"
            ],
            "properties": {
                "new_pass_code": {
                    "type": "string"
                },
                "old_pass_code": {
                    "type": "string"
                }
            }
        },
        "dtos.UpdateStatusTransactionDto": {
            "type": "object",
            "required": [
                "tx_hash",
                "tx_id",
                "user_op"
            ],
            "properties": {
                "balance": {
                    "type": "number"
                },
                "tx_hash": {
                    "type": "string"
                },
                "tx_id": {
                    "type": "integer"
                },
                "user_op": {
                    "$ref": "#/definitions/dtos.UserOpExtraTransaction"
                }
            }
        },
        "dtos.UpdateUser": {
            "type": "object",
            "properties": {
                "birthday": {
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                }
            }
        },
        "dtos.UpdateUserCRMDto": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Attribute"
                    }
                },
                "birthday": {
                    "type": "string"
                },
                "clv": {
                    "type": "number"
                },
                "register_date": {
                    "type": "string"
                },
                "tier": {
                    "type": "string"
                }
            }
        },
        "dtos.UserOpExtraTransaction": {
            "type": "object",
            "required": [
                "network_id",
                "raw_data",
                "user_op"
            ],
            "properties": {
                "network_id": {
                    "type": "integer"
                },
                "raw_data": {
                    "type": "string"
                },
                "user_op": {
                    "type": "string"
                }
            }
        },
        "dtos.VerifyPasscodeDto": {
            "type": "object",
            "required": [
                "code",
                "encrypted_private_key",
                "new_pass_code",
                "old_pass_code"
            ],
            "properties": {
                "code": {
                    "type": "string",
                    "maxLength": 6,
                    "minLength": 6
                },
                "encrypted_private_key": {
                    "type": "string"
                },
                "new_pass_code": {
                    "type": "string"
                },
                "old_pass_code": {
                    "type": "string"
                }
            }
        },
        "dtos.VerifyPaymasterRequest": {
            "type": "object",
            "required": [
                "network_id",
                "token_address",
                "user_op"
            ],
            "properties": {
                "network_id": {
                    "type": "integer"
                },
                "token_address": {
                    "type": "string"
                },
                "user_op": {
                    "type": "string"
                }
            }
        },
        "httperr.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "models.AccountType": {
            "type": "string",
            "enum": [
                "GOOGLE",
                "APPLE"
            ],
            "x-enum-varnames": [
                "GOOGLE",
                "APPLE"
            ]
        },
        "models.Attribute": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.ObjectType": {
            "type": "string",
            "enum": [
                "ERC20",
                "ERC721",
                "ERC1155",
                "Bundle"
            ],
            "x-enum-varnames": [
                "ERC20",
                "ERC721",
                "ERC1155",
                "Bundle"
            ]
        },
        "response.ErrorDto": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "errors": {
                    "type": "object",
                    "additionalProperties": true
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "response.SuccessDto": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "data": {},
                "message": {
                    "type": "string"
                }
            }
        },
        "utils.Reward": {
            "type": "object",
            "additionalProperties": true
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}