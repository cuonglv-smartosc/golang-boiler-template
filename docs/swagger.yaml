basePath: /api/v1
definitions:
  dtos.AddAddressBookDto:
    properties:
      address:
        type: string
      email:
        type: string
      username:
        type: string
    required:
    - address
    - username
    type: object
  dtos.Answer:
    properties:
      answer:
        type: string
      option_id:
        type: integer
      question_id:
        type: integer
    type: object
  dtos.AnswerToEventDto:
    properties:
      answers:
        items:
          $ref: '#/definitions/dtos.Answer'
        type: array
      option_id:
        type: integer
      sub_event_id:
        type: integer
    type: object
  dtos.CheckEmailAndOtpDto:
    properties:
      email:
        type: string
      otp_code:
        type: string
    required:
    - email
    - otp_code
    type: object
  dtos.ConfigTokenFeeDto:
    properties:
      network_id:
        type: integer
      token_fee_address:
        type: string
    required:
    - network_id
    - token_fee_address
    type: object
  dtos.CreateOrderRequestDto:
    properties:
      create_sign_transaction:
        $ref: '#/definitions/dtos.CreateSignTransactionDto'
      network_id:
        type: integer
      quantity:
        type: number
      vendor_id:
        type: integer
      vendor_sale_id:
        type: string
    required:
    - network_id
    - vendor_sale_id
    type: object
  dtos.CreatePGOrderRequestDto:
    properties:
      network_id:
        type: integer
      payment_gateway_id:
        description: ID of the payment gateway to use
        type: integer
      quantity:
        type: number
      vendor_id:
        type: integer
      vendor_sale_id:
        type: string
    required:
    - network_id
    - payment_gateway_id
    - vendor_sale_id
    type: object
  dtos.CreatePasscodeDtos:
    properties:
      auth_code:
        type: string
      auth_type:
        $ref: '#/definitions/models.AccountType'
      device_code:
        type: string
      device_name:
        type: string
      device_token:
        type: string
      device_type:
        type: string
      encrypted_private_key:
        type: string
      owner:
        type: string
      pass_code:
        type: string
      vendor_id:
        type: integer
    required:
    - auth_code
    - auth_type
    - device_code
    - device_name
    - device_token
    - device_type
    - encrypted_private_key
    - owner
    - pass_code
    - vendor_id
    type: object
  dtos.CreateSignTransactionDto:
    properties:
      action_id:
        minimum: 0
        type: integer
      balance:
        type: number
      coupon_code:
        items:
          type: string
        type: array
      expired_at:
        type: string
      group_member:
        items:
          type: string
        type: array
      order_ecom:
        type: string
      payment_method:
        items:
          type: string
        type: array
      user_ops:
        items:
          $ref: '#/definitions/dtos.UserOpExtraTransaction'
        type: array
    type: object
  dtos.CreateUserCRMDto:
    properties:
      attributes:
        items:
          $ref: '#/definitions/models.Attribute'
        type: array
      birthday:
        type: string
      clv:
        type: number
      register_date:
        type: string
      tier:
        type: string
      user_id:
        type: integer
      vendor_id:
        type: integer
    required:
    - birthday
    - clv
    - register_date
    - tier
    - user_id
    - vendor_id
    type: object
  dtos.GetOnSalesDto:
    properties:
      object_types:
        items:
          $ref: '#/definitions/models.ObjectType'
        type: array
      page_number:
        type: integer
      page_size:
        type: integer
      search_by:
        type: string
      vendor_collection_id:
        type: string
      vendor_id:
        type: integer
    required:
    - vendor_id
    type: object
  dtos.JoinToEventDto:
    properties:
      sub_event_id:
        type: integer
    type: object
  dtos.LoginAppleDtos:
    properties:
      code:
        type: string
      device_code:
        type: string
      device_name:
        type: string
      device_token:
        type: string
      device_type:
        type: string
    required:
    - code
    - device_code
    - device_name
    - device_token
    - device_type
    type: object
  dtos.LoginCheckEmailReqDto:
    properties:
      device_code:
        type: string
      device_name:
        type: string
      device_token:
        type: string
      device_type:
        type: string
      email:
        type: string
      pass_code:
        type: string
    required:
    - device_code
    - device_name
    - device_token
    - device_type
    - email
    - pass_code
    type: object
  dtos.LoginEmailWithOtpReqDto:
    properties:
      device_code:
        type: string
      device_name:
        type: string
      device_token:
        type: string
      device_type:
        type: string
      email:
        type: string
      otp_code:
        type: string
      pass_code:
        type: string
    required:
    - device_code
    - device_name
    - device_token
    - device_type
    - email
    - pass_code
    type: object
  dtos.LoginGoogleDtos:
    properties:
      credential:
        type: string
      device_code:
        type: string
      device_name:
        type: string
      device_token:
        type: string
      device_type:
        type: string
    required:
    - credential
    - device_code
    - device_name
    - device_token
    - device_type
    type: object
  dtos.MuckTnxReq:
    properties:
      otp_code:
        type: string
    required:
    - otp_code
    type: object
  dtos.PasscodeDto:
    properties:
      pass_code:
        type: string
    required:
    - pass_code
    type: object
  dtos.RedeemCalculateInformation:
    properties:
      applied_points:
        type: number
      number_point:
        type: number
      order_id:
        type: string
      vouchers:
        items:
          type: string
        type: array
    required:
    - order_id
    type: object
  dtos.RedeemCalculateResponse:
    properties:
      currency:
        type: string
      discount_on_item:
        additionalProperties:
          items:
            $ref: '#/definitions/utils.Reward'
          type: array
        type: object
      discount_on_total_order:
        items:
          $ref: '#/definitions/utils.Reward'
        type: array
      total_discount:
        type: number
      total_point_discount:
        type: number
      total_remaining_amount:
        type: number
    type: object
  dtos.RefreshTokenParams:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  dtos.RegisterWalletDtos:
    properties:
      device_code:
        type: string
      device_name:
        type: string
      device_token:
        type: string
      device_type:
        type: string
      email:
        type: string
      encrypted_private_key:
        type: string
      otp_code:
        type: string
      owner:
        type: string
      pass_code:
        minLength: 8
        type: string
      vendor_id:
        type: integer
    required:
    - device_code
    - device_name
    - device_token
    - device_type
    - email
    - encrypted_private_key
    - otp_code
    - owner
    - pass_code
    - vendor_id
    type: object
  dtos.RejectTransactionRequest:
    properties:
      txn_id:
        type: integer
    required:
    - txn_id
    type: object
  dtos.ScanUserRequest:
    properties:
      collection_address:
        type: string
      coupon:
        properties:
          description:
            type: string
          discount:
            type: string
          name:
            type: string
          vendor_config_id:
            type: string
        required:
        - discount
        - vendor_config_id
        type: object
      currency:
        type: string
      nft_id:
        type: string
      note:
        type: string
      order_paid:
        type: string
      user_address:
        type: string
    required:
    - collection_address
    - coupon
    - currency
    - nft_id
    - order_paid
    - user_address
    type: object
  dtos.UpdateDefaultVendorConfigDto:
    properties:
      vendor_config_id:
        type: integer
    type: object
  dtos.UpdateEventOptionsDto:
    properties:
      event_id:
        type: integer
      event_option_id:
        type: integer
    type: object
  dtos.UpdatePasscodeReqDto:
    properties:
      new_pass_code:
        type: string
      old_pass_code:
        type: string
    required:
    - new_pass_code
    - old_pass_code
    type: object
  dtos.UpdateStatusTransactionDto:
    properties:
      balance:
        type: number
      tx_hash:
        type: string
      tx_id:
        type: integer
      user_op:
        $ref: '#/definitions/dtos.UserOpExtraTransaction'
    required:
    - tx_hash
    - tx_id
    - user_op
    type: object
  dtos.UpdateUser:
    properties:
      birthday:
        type: integer
      email:
        type: string
      user_id:
        type: integer
    type: object
  dtos.UpdateUserCRMDto:
    properties:
      attributes:
        items:
          $ref: '#/definitions/models.Attribute'
        type: array
      birthday:
        type: string
      clv:
        type: number
      register_date:
        type: string
      tier:
        type: string
    type: object
  dtos.UserOpExtraTransaction:
    properties:
      network_id:
        type: integer
      raw_data:
        type: string
      user_op:
        type: string
    required:
    - network_id
    - raw_data
    - user_op
    type: object
  dtos.VerifyPasscodeDto:
    properties:
      code:
        maxLength: 6
        minLength: 6
        type: string
      encrypted_private_key:
        type: string
      new_pass_code:
        type: string
      old_pass_code:
        type: string
    required:
    - code
    - encrypted_private_key
    - new_pass_code
    - old_pass_code
    type: object
  dtos.VerifyPaymasterRequest:
    properties:
      network_id:
        type: integer
      token_address:
        type: string
      user_op:
        type: string
    required:
    - network_id
    - token_address
    - user_op
    type: object
  httperr.Error:
    properties:
      code:
        type: integer
      errors:
        additionalProperties: true
        type: object
      message:
        type: string
    type: object
  models.AccountType:
    enum:
    - GOOGLE
    - APPLE
    type: string
    x-enum-varnames:
    - GOOGLE
    - APPLE
  models.Attribute:
    properties:
      key:
        type: string
      value:
        type: string
    type: object
  models.ObjectType:
    enum:
    - ERC20
    - ERC721
    - ERC1155
    - Bundle
    type: string
    x-enum-varnames:
    - ERC20
    - ERC721
    - ERC1155
    - Bundle
  response.ErrorDto:
    properties:
      code:
        type: integer
      errors:
        additionalProperties: true
        type: object
      message:
        type: string
    type: object
  response.SuccessDto:
    properties:
      code:
        type: integer
      data: {}
      message:
        type: string
    type: object
  utils.Reward:
    additionalProperties: true
    type: object
info:
  contact:
    email: dungvm@smartosc.com
    name: Dzung VM
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Loyalty Backend
  version: "1.0"
paths:
  /:
    get:
      parameters:
      - description: Vendor ID
        in: query
        name: vendor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list redeem rules are activation
      tags:
      - LoyaltyLogicBusiness
  /address_book:
    get:
      parameters:
      - description: Input search
        in: query
        name: input_search
        type: string
      - description: Sort by
        in: query
        name: sort_by
        type: string
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Page number
        in: query
        name: page_number
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: GetAddressBookByUserId
      tags:
      - AddressBook
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.AddAddressBookDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: InsertAddressBook
      tags:
      - AddressBook
  /address_book/:addressBookId:
    delete:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: RemoveFromAddressBook
      tags:
      - AddressBook
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: GetAddressBookByUserId
      tags:
      - AddressBook
  /auth/login/apple:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginAppleDtos'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Login Apple
      tags:
      - Login
  /auth/login/email:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginCheckEmailReqDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Login email
      tags:
      - Login
  /auth/login/email/otp:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginEmailWithOtpReqDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Check OTP code for new device
      tags:
      - Login
  /auth/login/google:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.LoginGoogleDtos'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Login Google
      tags:
      - Login
  /auth/refresh-token:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.RefreshTokenParams'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Get New Access Token By Refresh Token
      tags:
      - Login
  /auth/register:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.RegisterWalletDtos'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: register wallet
      tags:
      - Register
  /auth/register/check-email:
    post:
      parameters:
      - in: query
        name: device_code
        required: true
        type: string
      - in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Check email before register user
      tags:
      - Register
  /auth/register/check-otp:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CheckEmailAndOtpDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Check otp before register user
      tags:
      - Register
  /calculate-redeem:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.RedeemCalculateInformation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.RedeemCalculateResponse'
        "400":
          description: Has error with the payload
          schema:
            $ref: '#/definitions/httperr.Error'
        "500":
          description: System has error occur
          schema:
            $ref: '#/definitions/httperr.Error'
      summary: Calculate information with voucher and vendor redeem rule
      tags:
      - LoyaltyLogicBusiness
  /dapps:
    get:
      parameters:
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Page number
        in: query
        name: page_number
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list dapp
      tags:
      - Home page
  /devices/device_codes/{deviceCode}:
    get:
      parameters:
      - description: Device code
        in: path
        name: deviceCode
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Get detail device by device code
      tags:
      - Device
  /events:
    get:
      parameters:
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Page number
        in: query
        name: page_number
        type: integer
      - description: Event type
        in: query
        name: event_type
        type: string
      - description: Event name
        in: query
        name: event_name
        type: string
      - description: All Events
        in: query
        name: all_events
        type: string
      - description: Vendor Config Id
        in: query
        name: vendor_config_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list events
      tags:
      - Home page
  /events/answer-sub-event:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.AnswerToEventDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: AnswerToSubEvent
      tags:
      - Event Options
  /events/detail:
    get:
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get event details
      tags:
      - Home page
  /events/join-sub-event:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.JoinToEventDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: JoinToSubEvent
      tags:
      - Event Options
  /events/options:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateEventOptionsDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: UpdateEventOptions
      tags:
      - Event Options
  /events/options/{event_id}:
    get:
      parameters:
      - description: Event ID
        in: path
        name: event_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get event options
      tags:
      - Event Options
  /events/un-join-sub-event:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.JoinToEventDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: UnJoinToSubEvent
      tags:
      - Event Options
  /insert-redemption-history:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.RedeemCalculateInformation'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dtos.RedeemCalculateInformation'
        "400":
          description: Has error with the payload
          schema:
            $ref: '#/definitions/httperr.Error'
        "500":
          description: System has error occur
          schema:
            $ref: '#/definitions/httperr.Error'
      summary: InsertRedemptionHistory information with voucher and vendor redeem
        rule
      tags:
      - LoyaltyLogicBusiness
  /integrations:
    get:
      parameters:
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Page number
        in: query
        name: page_number
        type: integer
      - description: Name
        in: query
        name: name
        type: string
      - description: Category
        in: query
        name: category
        type: string
      - description: Vendor Config Id
        in: query
        name: vendor_config_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list integration
      tags:
      - Integration
  /loyalty-balance:
    get:
      parameters:
      - description: Vendor's Token address
        in: query
        name: vendor_token
        required: true
        type: string
      - description: User address
        in: query
        name: address
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get loyalty point balance
      tags:
      - LoyaltyLogicBusiness
  /networks:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list network
      tags:
      - Home page
  /notifications:
    get:
      parameters:
      - description: Only un read
        in: query
        name: only_un_read
        type: boolean
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Page number
        in: query
        name: page_number
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: GetNotifications
      tags:
      - Notification
  /notifications/read:
    patch:
      parameters:
      - collectionFormat: csv
        in: query
        items:
          type: string
        name: ids
        required: true
        type: array
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: ReadNotifications
      tags:
      - Notification
  /notifications/read_all:
    patch:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: ReadAllNotifications
      tags:
      - Notification
  /order_payment/order_signature/{order_id}:
    get:
      parameters:
      - description: Order ECom ID
        in: path
        name: OrderId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Get Signature Order by Order ID ECom
      tags:
      - OrderPayment
  /send_muck:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: SendOtp
      tags:
      - OTP
  /shop/scan_user:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.ScanUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: ScanUser
      tags:
      - Shop
  /supported_token:
    get:
      parameters:
      - description: Network id
        in: query
        name: network_id
        type: integer
      - description: List contract address
        in: query
        name: list_address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list sp token
      tags:
      - Home page
  /token:
    get:
      parameters:
      - description: Network id
        in: query
        name: network_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: FindTokenByNetworkId
      tags:
      - Token
  /transaction_fees:
    get:
      parameters:
      - description: action_id
        in: query
        name: action_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: GetListTransactionFee
      tags:
      - Transaction Fee
  /transactions:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateSignTransactionDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: CreateSignTransaction
      tags:
      - Transaction
  /transactions/{id}:
    get:
      description: Retrieves a PGOrder by its unique ID
      parameters:
      - description: PGOrder ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: Get PGOrder by ID
      tags:
      - PGOrder
  /transactions/history/system_operation:
    get:
      parameters:
      - description: Transaction Type
        in: query
        name: txn_type
        type: string
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Page number
        in: query
        name: page_number
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: GetHistorySystemOperations
      tags:
      - Transaction
  /transactions/history/transaction:
    get:
      parameters:
      - description: Txn Type
        in: query
        name: txn_type
        type: string
      - description: Start Date
        in: query
        name: start_date
        type: string
      - description: End Date
        in: query
        name: end_date
        type: string
      - description: Page size
        in: query
        name: page_size
        type: integer
      - description: Page number
        in: query
        name: page_number
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: GetHistoryTransactions
      tags:
      - Transaction
  /transactions/reject:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.RejectTransactionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: RejectTransaction
      tags:
      - Transaction
  /transactions/update_status:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateStatusTransactionDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: UpdateStatusTransaction
      tags:
      - Transaction
  /user-crm:
    post:
      consumes:
      - application/json
      description: Create a new UserCRM record
      parameters:
      - description: UserCRM creation data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreateUserCRMDto'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Create a new UserCRM
      tags:
      - UserCRM
  /user-crm/{user_id}:
    get:
      description: Get details of a UserCRM by user ID
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Get UserCRM details
      tags:
      - UserCRM
    patch:
      consumes:
      - application/json
      description: Update details of a UserCRM
      parameters:
      - description: User ID
        in: path
        name: user_id
        required: true
        type: integer
      - description: UserCRM update data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateUserCRMDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Update UserCRM details
      tags:
      - UserCRM
  /user_nft:
    get:
      parameters:
      - description: Vendor Config Id
        in: query
        name: vendor_config_id
        type: integer
      - description: PlatForm
        in: query
        name: platform_id
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list nft
      tags:
      - Home page
  /users/configs/token_fee:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.ConfigTokenFeeDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: ConfigTokenFee
      tags:
      - Configs
  /users/me:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Get detail information from user
      tags:
      - Users
  /users/me/logout:
    post:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Logout
      tags:
      - Users
  /users/me/passcode:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.VerifyPasscodeDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Verify to update passcode
      tags:
      - Users
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.CreatePasscodeDtos'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Create passcode
      tags:
      - Users
  /users/me/passcode/check:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdatePasscodeReqDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Request to update passcode
      tags:
      - Users
  /users/me/verify/passcode:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.PasscodeDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: Verify passcode
      tags:
      - Users
  /users/search:
    get:
      parameters:
      - description: Email
        in: query
        name: email
        type: string
      - description: Address
        in: query
        name: address
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: FindEmailAndAddress
      tags:
      - Users
  /users/update:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: UpdateUser
      tags:
      - Users
  /users/vendor_config:
    patch:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.UpdateDefaultVendorConfigDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: UpdateDefaultVendorConfig
      tags:
      - Users
  /validate_muck:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.MuckTnxReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: ValidateOtp
      tags:
      - OTP
  /vendor_config:
    get:
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list vendors
      tags:
      - Vendor
  /vendor_config/detail:
    get:
      parameters:
      - description: Network id
        in: query
        name: network_id
        required: true
        type: integer
      - description: Vendor id
        in: query
        name: vendor_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get vendor detail
      tags:
      - Vendor
  /vendor_sale:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.GetOnSalesDto'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: GetOnSales
      tags:
      - VendorSale
  /vendor_sale/{id}:
    get:
      parameters:
      - description: Sale ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: GetOnSaleById
      tags:
      - VendorSale
  /verify_paymaster:
    post:
      parameters:
      - description: Body data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dtos.VerifyPaymasterRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      summary: VerifyPaymaster
      tags:
      - Verify paymaster
  /vouchers:
    get:
      parameters:
      - description: Order id (E-Com)
        in: query
        name: order_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/response.SuccessDto'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.ErrorDto'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/response.ErrorDto'
      security:
      - BearerAuth: []
      summary: get list voucher available
      tags:
      - LoyaltyLogicBusiness
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
